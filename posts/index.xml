<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Blog</title><link>https://blog.sions.org/posts/</link><description>Recent content in Posts on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Dec 2023 08:00:00 +0000</lastBuildDate><atom:link href="https://blog.sions.org/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Promtail Plex</title><link>https://blog.sions.org/posts/promtail-plex/</link><pubDate>Mon, 11 Dec 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/promtail-plex/</guid><description>The other day while watching Plex it would reliably stop playback 2 minutes before the end. When it did this an error would pop up &amp;ldquo;Conversion failed. The transcoder exited due to an error.&amp;rdquo; Helpful.
Not a problem. We&amp;rsquo;ll log onto the log server and see what it spat out. Well much to my dismay, Plex doesn&amp;rsquo;t seem to log to the typical I/O streams. While I&amp;rsquo;m not overly surprised it definitely was something I didn&amp;rsquo;t think about.</description><content>&lt;p>The other day while watching Plex it would reliably stop playback 2 minutes before the end. When it did this an error would pop up &amp;ldquo;Conversion failed. The transcoder exited due to an error.&amp;rdquo; Helpful.&lt;/p>
&lt;p>Not a problem. We&amp;rsquo;ll log onto the log server and see what it spat out. Well much to my dismay, Plex doesn&amp;rsquo;t seem to log to the typical I/O streams. While I&amp;rsquo;m not overly surprised it definitely was something I didn&amp;rsquo;t think about.&lt;/p>
&lt;p>Made sure the actual log files were being exported as intended, and then started the trial and error of getting Promtail to appropriately label the logs and ship them to the Loki server. Here&amp;rsquo;s what I ended up with putting in my scrape config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Scrape plex logs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># *{r,e,s} is a little hard coded but it allows for ignoring the rotated logs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">job_name&lt;/span>: &lt;span style="color:#ae81ff">plexlogs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pipeline_stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">regex&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">expression&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;(?P&amp;lt;timestamp&amp;gt;\w{3}\s{1,2}\d{1,2}, \d{4} \d{2}:\d{2}:\d{2}.\d{3}) \[(?P&amp;lt;pid&amp;gt;.*)\] (?P&amp;lt;level&amp;gt;[A-Z]{4,5}) - (?P&amp;lt;message&amp;gt;.*)&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">level&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">static_configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">targets&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">host&lt;/span>: &lt;span style="color:#ae81ff">storage01&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">job&lt;/span>: &lt;span style="color:#ae81ff">plexlogs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">__path__&lt;/span>: &lt;span style="color:#ae81ff">/var/log_plex/*{r,e,s}.log&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Docker Logs</title><link>https://blog.sions.org/posts/docker-logs/</link><pubDate>Mon, 04 Dec 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/docker-logs/</guid><description>I was investigating what it would take to create a docker container and have the logs go to their appropriate log files in addition to being available via the docker logs command (don&amp;rsquo;t remember why). During the course of doing that I didn&amp;rsquo;t accomplish my goal but I did learn that the typical I/O streams of STDOUT and STDERR are the defaults. So it&amp;rsquo;s essentially just piping those output streams directly to the command.</description><content>&lt;p>I was investigating what it would take to create a docker container and have the logs go to their appropriate log files in addition to being available via the &lt;code>docker logs&lt;/code> command (don&amp;rsquo;t remember why).
During the course of doing that I didn&amp;rsquo;t accomplish my goal but I did learn that the typical I/O streams of STDOUT and STDERR are the defaults. So it&amp;rsquo;s essentially just piping those output streams directly to the command.&lt;/p>
&lt;p>Quick little post which was mostly just reading the documentation of the tool I&amp;rsquo;m using. Ha!&lt;/p>
&lt;p>source data: &lt;a href="docs.docker.com/config/containers/logging/">https://docs.docker.com/config/containers/logging/&lt;/a>&lt;/p></content></item><item><title>New Laptop</title><link>https://blog.sions.org/posts/new-laptop/</link><pubDate>Mon, 20 Nov 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/new-laptop/</guid><description>My personal laptop died. I acquired a secondhand Dell Latitude 5285. The specs (i5, 8GB RAM, 256GB SSD) aren&amp;rsquo;t as fancy as they could be, but the price was right.
I initially tried to install Windows 11 to determine if the device was entirely functional, as one does with a used device. It seems the i5 isn&amp;rsquo;t a supported generation, though. So back to good ol&amp;rsquo; Windows 10. Which worked great during testing!</description><content>&lt;p>My personal laptop died. I acquired a secondhand Dell Latitude 5285. The specs (i5, 8GB RAM, 256GB SSD) aren&amp;rsquo;t as fancy as they could be, but the price was right.&lt;/p>
&lt;p>I initially tried to install Windows 11 to determine if the device was entirely functional, as one does with a used device. It seems the i5 isn&amp;rsquo;t a supported generation, though. So back to good ol&amp;rsquo; Windows 10. Which worked great during testing! As I&amp;rsquo;m a self-described Linux fan, I then proceeded to install and setup Linux Mint Debian Edition like I run on my old laptop and my current desktop.&lt;/p>
&lt;p>Sadly, I didn&amp;rsquo;t like it. There was nothing concretely wrong, but it didn&amp;rsquo;t feel as fluid as it was supposed to, maybe I&amp;rsquo;m growing out of Linux on my personal workstations. But it didn&amp;rsquo;t feel right. Cinnamon has a primary focus on being used on a desktop. Gnome Shell felt better, but the onscreen keyboard wasn&amp;rsquo;t reliable at detecting when to pop up. Moving from tablet to laptop mode was a hassle as there wasn&amp;rsquo;t a software tablet mode to enable or something.&lt;/p>
&lt;p>Well, back to Windows. It works fine, but I&amp;rsquo;ll need to rethink a couple different workflows.&lt;/p></content></item><item><title>Sarpine, Fourth Session</title><link>https://blog.sions.org/posts/sarpine-fourth/</link><pubDate>Thu, 17 Aug 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/sarpine-fourth/</guid><description>On the third day of training, we awoke and started whatever daily tasks we were given. The chores that somehow contribute to the Kinship functioning. Concluding those chores, Storm started trying to discretely seek out Kernick, perhaps he had successfully deserted from this ragtag military of volunteers. Eventually making his way to the Mundos camp, locating Kernick doing some maintenance on the training yard, refilling the targets with straw, flattening the sands of the sparing pit.</description><content>&lt;p>On the third day of training, we awoke and started whatever daily tasks we were given. The chores that somehow contribute to the Kinship functioning. Concluding those chores, Storm started trying to discretely seek out Kernick, perhaps he had successfully deserted from this ragtag military of volunteers. Eventually making his way to the Mundos camp, locating Kernick doing some maintenance on the training yard, refilling the targets with straw, flattening the sands of the sparing pit. Satisfied not with Kernicks fate, but with knowing where the orc is. Storm started heading back to the camp of Xyzs, not entirely sure what he should accomplish until the day&amp;rsquo;s training started that afternoon.&lt;/p>
&lt;p>Eventually time progresses and everyone started heading to their respective training arenas. Learning their lessons about standing up when they were told not to. &amp;ldquo;I hope you&amp;rsquo;ve learned about the ideals of the kinship.&amp;rdquo; Captain Sandaman started with, her voice booming over the crowds as she started with some brief announcements. At the conclusion of which she and the other illusionists behind her on the stage start their choreographed movement, whisking all the audience off to their training, our senses to fading to black.&lt;/p>
&lt;p>We start coming to, there are stone walls, buildings, a couple temporary tents. The architecture tells us where we are. We&amp;rsquo;re in the Dragon age, before the Battle of Dragons End. Memories that aren&amp;rsquo;t ours start flooding us as we learn that we&amp;rsquo;re in a fort with the simple name of Fort Joy. Xen is the marked commander of this base, everyone starts remembering what the tasks at hand were. Everyone in the fort was preparing to send a team to retrieve some material the next morning, which is only a few hours away. The general feeling of the fort is one of unease, there&amp;rsquo;s been rumors and reports of an affliction called &amp;ldquo;The Whispers&amp;rdquo; potentially happening. Guards were doubled hours ago, long before we started inhabiting these memories. Magic scrolls to assist with dispelling the affliction have been handed out, so everyone has one. It can be likened to rabies, with a further infection of the mind causing one to whisper to themselves as they turn on those nearby, friend and foe alike. Xen starts asking for anyone that can detect magic. Proceeding to pair them off, he ordered them to start checking everyone in the Fort for who could be infected. Discretely, Storm slipped Xen a numbing tonic that should assist if they get as far as needing to fight anything. Storm starts prepping for the plans the next day, finding it best to keep busy. These trainings are much more excitement than he had previously bargained for. Storm did remember he was the only logistics and supply handler in the fort, so after he concluded what prep was needed for the next day, he started digging for whatever supplies could be borrowed for this particular memory.&lt;/p>
&lt;p>Xen was in the yard, running the fort when he noticed the silence. The silence that only happens when the sounds of nature disappear. A low fog on the ground starts rolling through the gaps in the portcullis of the gates. Starts building up along the outside walls, eventually rolling over and through the battlements. As the commander, he orders everyone to get to the gates, to prepare for battle. With the fog now inside the yard of the keep, they&amp;rsquo;re here. Someone or something is here, and intent on harm. Standing in the middle of the yard, Xen checks for magic and finds that there are three beings here, quickly pointing them out he sends people to investigate.&lt;/p>
&lt;p>Screams. There&amp;rsquo;s now more bodies, those that have been lost are now more than there was a few minutes ago. With an attack elsewhere, they finally made themselves visible. The same blurry beings that have been present in the previous memories are now here. Their appearance coincides with chaos breaking out. Several people seemed to have suddenly been infected with The Whispers, and they turn on what was once a friend. The blurry beings moving across the fog with ease, while anyone else causes ripples and movement. They&amp;rsquo;re dispatched with only a few being lost. Those that are sick are successfully talked out of their current state of mind, as the fog starts to dissipate.&lt;/p>
&lt;p>Captain Sandaman makes herself visible. She proceeds to inform and remind us about the perils of feeling too comfortable, distrust can and does occur. We were attacked by assassins, the blurry beings are called Ardaractans. They are from another plane. Many of the non-monster kinds have associated Ardaractan influence with that of dragons, but the captain informs us that is not the case, and we had simply not known that they were not allied. Training concludes for the day, and we cut to the next morning.&lt;/p>
&lt;p>This is the fourth day of training and the morning occurs like any other. Alan excitedly gathers both Storm and Xen, so he can sit near them, Storm and Alan exchanging discussion of their &amp;ldquo;battle scars&amp;rdquo; which were little more than bruises at this point. Alan praises them and thanks the two of them for assisting to give him confidence. When everyone gets to the training stadium in the afternoon, the announcements largely focus around the need for increased discipline around the Kinship military. Settling in after the announcements, the coordination from the trainers leads to the by now familiar feeling of sensory deprivation as things fade to black.&lt;/p>
&lt;p>When the group and their associated senses start to wake up again, they look around. Finding themselves on a sky ship, there are small birds taking advantage of the windbreak produced from the ship as it soars above the clouds. There are 5 people onboard, looking around Storm recognizes that Alan, and Xen are nearby. Looking in the direction of the other two, his senses are suddenly cut off, a new jolting sensation compared to what is normally a gentle transition into sensory deprivation.&lt;/p>
&lt;hr>
&lt;p>When our senses finally return, we find ourselves overlooking a cityscape. Caverns with dwellings carved into the walls. Storm, Xen, and Alan are all present. After a brief pause, Captain Sandaman appears, but not the one we&amp;rsquo;ve grown accustomed to seeing. Her clothes are not of Sarpine. Her face, seemingly an approximation of the same face we would recognize. She also appears less focused, more blurry. With a face that appears to be concerned, she starts speaking to us, but not with words that can be heard, just felt. This being we know as Captain Sandaman informs us that they are an Ardaractan. Apologizing about the state we currently find ourselves in, they start letting us know what happened. Our minds needed to start rebuilding. The Crystal Barrier we had grown up knowing, at the south end of the continent, had shattered. Many of our colleagues had fallen both in the shockwave that came from the breaking, and the subsequent attack. It was at this that she changed where we found ourselves. Floating. Still incorporeal. Overlooking the second arena that we were familiar with, we saw the beginning of the transition, when we would normally be losing ourselves with the sensory inputs we relied on so much.&lt;/p>
&lt;p>On the stage, we could see Captain Sandaman in her human glamour in what appeared to be kneeling. Deep in the concentration that would be required for this type of mass illusion. But in the crowd of trainees we could see her real form. She was walking around, performing some activity we didn&amp;rsquo;t recognize on each member of the audience. As she neared our physical bodies there was a loud crack, looking in the direction of that crack we see that the barrier now had a sizable fracture. While normally they would be uncommon and a guard would quickly be dispatched and placed at it, this one was abnormal. This abnormality primarily stemming from its size, this was larger than any that had happened before and as the party and the trainers looked onward at the barrier registering what they were looking at smaller fractures started to stem outward from it before the crystal barrier was a mosaic of rainbows and cracks. The cracks start glowing brightly, it was bright enough we instinctually look away despite not physically being there. Reaching a peak of bright light, there is another loud boom, the crystal barrier explodes.&lt;/p>
&lt;p>The shockwave from this explosion starts spilling light out. The training arena closest to the barrier is quickly eradicated, as the camp of the Kinship is washed in a bright white light, there are pockets of resistance. Mages creating small barriers to protect themselves. People trying to outrun a wave of light that quickly catches up. There are bodies everywhere. As the wave gets to where our physical bodies now occupy, we see a being we know as Captain Sandaman project a bubble, she was nearby and we were closest. We were encompassed in a bubble with her, as a wave of darkness now starts rushing out of the same place that the light just came from. This wave of darkness accompanied by a road, at first it was dull but the clarity quickly comes. Small pockets of soldiers start grabbing what weapons they can as they advance towards the direction the roar came from, further into Presque. There are some that try to desert and flee, they are quickly met with a spear or arrow to the back. What started as a single roar has quickly accumulated into a series of smaller, equally loud ones. Commanders are yelling out to assume defensive positions.&lt;/p>
&lt;p>Soon thereafter, a crush monster-kind start rushing over the hillsides of Presque. Some quickly falling to both arrows and spells alike. The early victor of this engagement appears to not be the monster-kind. But it&amp;rsquo;s a fleeting lead, as there are giant wormlike monsters that come bursting out of the ground to attack and subsequently eat the archers and casters that were keeping the monsters at bay. This has led to the monsters now quickly gaining the upper hand. The attack was more coordinated than expected, and the monsters are quickly overwhelming the encampment of the kinship. We see a figure at the front line glowing, &amp;ldquo;I will see you in the next life&amp;rdquo; we hear a voice in our heads echo out as the glowing being then explodes into light, the monsters that could see the light are disoriented. Along with the burst of light, our vision returns to the soft surroundings of what we learn to be Takarota. Sandaman proceeds to inform the party that we were saved by them. We were whisked into a mindscape she had, and we were temporarily just memories. But it took time for our minds to readjust and heal. The event we witnessed was several days ago.&lt;/p></content></item><item><title>Sarpine, Third Session</title><link>https://blog.sions.org/posts/sarpine-third/</link><pubDate>Fri, 11 Aug 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/sarpine-third/</guid><description>On the second day, we woke and started our usual chores. Upon finishing those tasks, Storm was curious about Kernick, who he recalled convincing to try and desert from the current multi-country military. He wasn&amp;rsquo;t able to find him, but might try again the next day.
Heading to the assigned training arena this was more familiar that it was yesterday, so he found a seat and waited to lose access to his own senses, waited to enter another memory based training exercise.</description><content>&lt;p>On the second day, we woke and started our usual chores. Upon finishing those tasks, Storm was curious about Kernick, who he recalled convincing to try and desert from the current multi-country military. He wasn&amp;rsquo;t able to find him, but might try again the next day.&lt;/p>
&lt;p>Heading to the assigned training arena this was more familiar that it was yesterday, so he found a seat and waited to lose access to his own senses, waited to enter another memory based training exercise. Captain Sandaman once more, gave a speech, and they were all whisked away to some situation.&lt;/p>
&lt;p>The first thing they learned of note was that they were in a tent. Looked to be on the larger side (at least to Storm), there was a larger table that seemed to be filled with figurines and maps. The sides of the tent seemed to have drawers of other forms of documentation of various kinds. By looking under this table, Storm could see that there were a total of 6 people. Storm, Xen, a goblin named Graz Kapoot, and a halfling named Jade Ladon. After briefly introducing ourselves, the objective of why we were there was slowly forming in their heads. They were generals, in charge of this battalion, which had the task of rescuing a group of prisoners from the fortress nearby.&lt;/p>
&lt;p>Upon an initial solicitation of ideas, we learn the professions of the individuals tasked as being generals. A baker, an alchemist that aspires to be an adventurer, and a banker. The remaining two individuals were seemingly posing as advisors and not contributing to the task at hand. Xen seemingly the only one with military experience quickly took control and started arranging the pieces on the battle map to form a cohesive strategy. Storm wanting to completely disregard the army and just use a small strike team to insert themselves, do what they need and leave. Everyone in the room had too many questions about what was in the fortress and what could be waiting for them, or even who the prisoners were. Everyone suddenly had a memory that there were spies, due back within a couple of hours. So the command staff elected to wait.&lt;/p>
&lt;p>When the spies finally showed up, there were a few pieces of key information that was finally brought to light. There were some long range weapons near the front gate, the waterway on the east side was not highly protected, and one of the prisoners is a high ranking cinder blood. The denizens of this setting are familiar with cinder bloods, they are individuals that seem to have traces of draconic heritage in their blood. In the modern day, they are less trusted due to history with dragons having attempted to enslave non-dragons.&lt;/p>
&lt;p>When the command staff finished finalizing their plan of how to rescue the prisoners, their senses started to dull until they were rather suddenly aware that they were in combat. A quick look around, they learn that they are now located within the infantry of the battalion that was distracting the fortress such that the strike team could do their thing.&lt;/p>
&lt;p>Three beings bearing down on the party of Xen, Storm, and Jade, both groups seemingly noticing each other at the same time. Storm quickly identified that 2 were air mephits, and the last final being was blurry and not easy to look at. The party was quickly attacked and took a number of injuries before the tables turned. The mephits and blurry individual were dispatched and dealt with. Finally getting a chance to look around, Jade notices there are dragons overhead. Which none of them had ever seen in person, a tiny ball of smoke started barreling towards them and the party readied themselves for what ended up being a tiny little smoke dragon. With lungs much bigger than a creature of that size should have, it roared and started attacking. The party had no issues dealing with it before it eventually fell. At the conclusion, everything faded to black, Storm came to with a number of bruises on his body that weren&amp;rsquo;t there before. Consequences of the training, and not having enough mental fortitude to prevent them.&lt;/p></content></item><item><title>Sarpine, Second Session</title><link>https://blog.sions.org/posts/sarpine-second/</link><pubDate>Sun, 06 Aug 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/sarpine-second/</guid><description>We finished up a game session, and I thought I would give a bit of a summary. This is more for recurring writing exercises than anything else.
We start the session with our intrepid heroes completing their daily tasks. They haven&amp;rsquo;t formed an adventuring party yet, and they haven&amp;rsquo;t exchanged names at this point in the story.
With the last of the continent&amp;rsquo;s unified army having arrived, most members of this encampment the size of a small city are informed training will start today.</description><content>&lt;p>We finished up a game session, and I thought I would give a bit of a summary. This is more for recurring writing exercises than anything else.&lt;/p>
&lt;p>We start the session with our intrepid heroes completing their daily tasks. They haven&amp;rsquo;t formed an adventuring party yet, and they haven&amp;rsquo;t exchanged names at this point in the story.&lt;/p>
&lt;p>With the last of the continent&amp;rsquo;s unified army having arrived, most members of this encampment the size of a small city are informed training will start today. Upon completing their assignments, Xen and Storm proceed to their designated training location. Which appears to largely be seating arranged around a stage, large enough for a few hundred at a time. After most of the people in attendance take their seats, the leader of training, Captain Sandaman, informs all in attendance that over the next several days they will have a chance to act in a role as a leader and gain plenty of experience acting through situations that have been recovered through the memories of soldiers.&lt;/p>
&lt;p>The Captain Sandaman again directs all to sit before several mages on the stage proceed to cast a unique spell that places all present under a deep trance.&lt;/p>
&lt;p>Shortly after everything went dark, Xen and Storm found themselves walking along a corridor in a cave. Tasked with securing the contents of the cave until assistance could show up, they delved deeper. The small group exchanged names and consists of Xen, Storm, Alan, and Kernick.&lt;/p>
&lt;p>The party eventually finds an orange substance on the wall that appears to be Dragonspark, a physical manifestation of the ley lines. Xen, learning of its ability to combust, starts to give it a wider berth due to the motes of flame around his head for light. The party proceeds to take a brief break before starting on the goal of securing the cave. A brief exploration led to a couple of revelations. The first being that there was a spark spring—a physical spring caused as a result of the leyline. The second is that there appears to be a pile of corpses, skeletons, and weapons. Some amphibious merfolk creatures seem to be using this as part of their hunting grounds. The tridents and a body of underground water appear to correlate with this.&lt;/p>
&lt;p>Before long, the merfolk came ashore and attacked, as did a being that seemed to be blurry, coming out of the wall near the spark spring. Quickly dispatching them with an explosive set-off near the spark spring, the party started to lick their wounds as everything faded back to what they knew as reality.&lt;/p></content></item><item><title>Ansible Blocky</title><link>https://blog.sions.org/posts/ansible-blocky/</link><pubDate>Thu, 03 Aug 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/ansible-blocky/</guid><description>I&amp;rsquo;ve given myself a personal goal of creating 100 ansible playbooks, I suppose roles would also count. The destination is essentially accomplishing 100 goals with ansible.
These are what I&amp;rsquo;ve already accomplished.
blocky.yml install_disable_usb_wake.yml install_sshd_config.yml install_sudo.yml lynis.yml podman.yml promtail.yml run_updates.yml Overall not terribly complex roles, most of them have hardcoded defaults but that&amp;rsquo;ll probably get resolved when the existing playbooks get converted to roles.
Most recently I made a playbook that setup and configured blocky-dns which would be my 8th playbook.</description><content>&lt;p>I&amp;rsquo;ve given myself a personal goal of creating 100 ansible playbooks, I suppose roles would also count. The destination is essentially accomplishing 100 goals with ansible.&lt;/p>
&lt;p>These are what I&amp;rsquo;ve already accomplished.&lt;/p>
&lt;ul>
&lt;li>blocky.yml&lt;/li>
&lt;li>install_disable_usb_wake.yml&lt;/li>
&lt;li>install_sshd_config.yml&lt;/li>
&lt;li>install_sudo.yml&lt;/li>
&lt;li>lynis.yml&lt;/li>
&lt;li>podman.yml&lt;/li>
&lt;li>promtail.yml&lt;/li>
&lt;li>run_updates.yml&lt;/li>
&lt;/ul>
&lt;p>Overall not terribly complex roles, most of them have hardcoded defaults but that&amp;rsquo;ll probably get resolved when the existing playbooks get converted to roles.&lt;/p>
&lt;p>Most recently I made a playbook that setup and configured blocky-dns which would be my 8th playbook.&lt;/p>
&lt;p>What&amp;rsquo;s accomplished:&lt;/p>
&lt;ol>
&lt;li>Remove systemd-resolved&lt;/li>
&lt;li>Install the DNS server&lt;/li>
&lt;li>Setup a systemd unit&lt;/li>
&lt;li>Start the service&lt;/li>
&lt;/ol>
&lt;h3 id="remove-systemd-resolved">Remove systemd-resolved&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Remove and purge systemd-resolved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.apt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">systemd-resolved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">absent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">purge&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;re doing the fairly standard process of removing a package, using the apt module, and in this case we&amp;rsquo;re working on &lt;code>systemd-resolved&lt;/code>. Mainly this is being removed because it would interfere with blocky dns doing its job for a couple reasons. First and foremost that it&amp;rsquo;s currently occupying port 53 and thus blocky wouldn&amp;rsquo;t be able to secure the rights to use it. Another issue being that it can act as a DNS stub resolver, which isn&amp;rsquo;t quite what we want in this instance. Overall I think it&amp;rsquo;s great and definitely makes things a little easier in linux than they used to be but as we&amp;rsquo;re just setting up a full dns server we won&amp;rsquo;t need it.&lt;/p>
&lt;h3 id="install-the-dns-server">Install the DNS server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Download binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.unarchive&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/0xERR0R/blocky/releases/download/v0.21/blocky_v{{ blocky_version }}_Linux_x86_64.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/tmp/blocky&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/local/bin/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create config directory - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Ensure config in place for - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">blocky-config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/{{ service_name }}/config.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload service&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a fairly common pattern for using things released on Github, or otherwise not desirable via the respective distributions package manager. Not much different than what a user would be doing. Download, Place binary in proper place, and create config files. I&amp;rsquo;m not convinced the parmisions are the most secure but just short of creating seperate groups for binaries based on the service user that should be able to use them, we&amp;rsquo;ll call it good enough.&lt;/p>
&lt;h3 id="setup-a-systemd-unit">Setup a systemd unit&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create service user - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.user&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">system&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create service file - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Description=Service file for blocky-dns
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Type=simple
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> User=blocky
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ExecStart=/usr/local/bin/blocky --config=/etc/blocky/config.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AmbientCapabilities=CAP_NET_BIND_SERVICE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Restart=always
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> WantedBy=multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/systemd/system/blocky.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Start service - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">started&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There&amp;rsquo;s a lot of substitutions going on here. &lt;code>{{ service_name }}&lt;/code> is a Jinja template. If the variable &lt;code>service_name&lt;/code> is defined then the entire string will be replaced with whatever is set to that variable. the other interesting and different thing is &lt;code>AmbientCapabilities=CAP_NET_BIND_SERVICE&lt;/code> being defined in the service file. This gives the service the capability to use port numbers &amp;lt;1024. Some documentation is &lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.exec.html#Capabilities">here&lt;/a> essentially this is a list of capabilities that are being included for the executed process as a non-privleged user.&lt;/p>
&lt;p>Then we start the service.&lt;/p>
&lt;h3 id="the-end-result">The end result&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Installing and configuring blocky-dns&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">blocky_version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0.21&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">service_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;blocky&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Remove and purge systemd-resolved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.apt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">systemd-resolved&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">absent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">purge&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Download binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.unarchive&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/0xERR0R/blocky/releases/download/v0.21/blocky_v{{ blocky_version }}_Linux_x86_64.tar.gz&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/tmp/blocky&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/local/bin/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create config directory - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Ensure config in place for - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">blocky-config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/{{ service_name }}/config.yml&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create service user - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.user&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">system&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create service file - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Description=Service file for blocky-dns
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Type=simple
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> User=blocky
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ExecStart=/usr/local/bin/blocky --config=/etc/blocky/config.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> AmbientCapabilities=CAP_NET_BIND_SERVICE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Restart=always
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> WantedBy=multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/systemd/system/blocky.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Start service - {{ service_name }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">handlers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">daemon_reload&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;{{ service_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">restarted&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Ansible Handler</title><link>https://blog.sions.org/posts/ansible-handler/</link><pubDate>Sun, 23 Jul 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/ansible-handler/</guid><description>Spent a good part of the morning working on writing an Ansible playbook to install and setup promtail on a new server, adding it to the central logging setup.
At first I started manually downloading the binary and manually installing it when I remembered I wanted to work on using ansible more. So I stopped where I was and started over again except this time electing to use the power of automation.</description><content>&lt;p>Spent a good part of the morning working on writing an Ansible playbook to install and setup promtail on a new server, adding it to the central logging setup.&lt;/p>
&lt;p>At first I started manually downloading the binary and manually installing it when I remembered I wanted to work on using ansible more. So I stopped where I was and started over again except this time electing to use the power of automation.
Pretty simple what we needed to do&lt;/p>
&lt;ol>
&lt;li>Download and install the binary&lt;/li>
&lt;li>Install the config file&lt;/li>
&lt;li>Create a service user&lt;/li>
&lt;li>Create a systemd unit and start it&lt;/li>
&lt;/ol>
&lt;h3 id="create-an-empty-playbook">Create an empty playbook&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Installing and configuring Promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Hello World&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.debug&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">msg&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Hello World!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As with any good software project we start with a basic template which we&amp;rsquo;ll expand upon. This simply outputs &amp;ldquo;Hello World!&amp;rdquo; and finishes the playbook.&lt;/p>
&lt;p>and to check our work:
&lt;code>ansible-playbook -i 192.0.2.2, playbook.yml&lt;/code>&lt;/p>
&lt;h3 id="download-and-install-the-binary">Download and install the binary&lt;/h3>
&lt;p>Replacing our hello world task we create two more, the first:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Download binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.unarchive&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There are a few things of note going on here. The module will automatically download and extract the archive from the URI given (but in this case &amp;ldquo;unzip&amp;rdquo; needs to be installed on the target host). Notice how the URI is in quotes and some curly braces are in the middle, this is because further up the document we&amp;rsquo;ve defined the version of promtail we want as a variable. Like so&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">promtail_version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.8.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lastly we&amp;rsquo;ve set &lt;code>remote_src&lt;/code> to true, this tells ansible that the file in question is located on the host that it&amp;rsquo;s currently working on.&lt;/p>
&lt;p>The task responsible for installing the freshly downloaded binary.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/tmp/promtail-linux-amd64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/local/bin/promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0754&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This one is fairly self explanatory. We&amp;rsquo;re using copy to move the binary. Then changing the owner and setting permissions. Again &lt;code>remote_src&lt;/code> is used to tell ansible the file is on the host it&amp;rsquo;s working on. I like specifying become on the per task level as opposed to per playbook, this helps with only needing to be root when needed.&lt;/p>
&lt;h3 id="install-the-config-file">Install the config file&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/promtail&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Ensure Promtail config in place&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">promtail-config.yml.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/promtail/config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>These two tasks are pretty simple, create a directory for promtail config files. Then copy the config file, while replacing the jinja variables in the template. While I was iterating on the file, I ran into a minor issue where I would run the playbook with an updated config file. It would successfully run, but promtail was using the old config file. I ended up learning about Ansible Handlers. Before I had a task hacked together that would check if the previous task finished or not. Now I have a handler at the end of the document. Handlers are described a bit &lt;a href="https://ansible.readthedocs.io/projects/lint/rules/no-handler/">here&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">restarted&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>notify&lt;/code> keyword at the end of the task triggers a handler when tasks are changed. Then the handler (which is identical to a normal task) is executed, which in this case reloads the service (which we haven&amp;rsquo;t defined yet).&lt;/p>
&lt;h3 id="create-a-service-user">Create a service user&lt;/h3>
&lt;p>This is a pretty simple task, we just create a system user, and give it access to the &lt;code>adm&lt;/code> group, this will give it permissions to access most of the logs found in &lt;code>/var/logs&lt;/code>. By creating a system user we&amp;rsquo;re making a user that isn&amp;rsquo;t for users. This is an automated account that processes can run over, this is best practice for security as we don&amp;rsquo;t want processes running under regular users or root.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail service user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.user&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">system&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">groups&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;adm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-systemd-unit-and-start-it">Create a systemd unit and start it&lt;/h3>
&lt;p>Again, just copying a file into place on the server, except we&amp;rsquo;re also giving the text that should be in the source file instead of creating a source file. I haven&amp;rsquo;t decided on a standard way to do this, and with a simple enough service file like the below it&amp;rsquo;s probably okay to define in this case.&lt;/p>
&lt;p>After installing the service, we start and enable it, then define a handler for in the event we replace service file with something else.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail service file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Description=Promtail service for Grafana Loki
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Type=simple
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> User=promtail
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ExecStart=/usr/local/bin/promtail -config.file=/etc/promtail/config.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Restart=always
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> WantedBy=multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/systemd/system/promtail.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Start Promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">handlers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">daemon_reload&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="the-end-result">The end result&lt;/h3>
&lt;p>This is what I ended up getting for the end result. In all it is pretty straightforward, and I think fairly easy to understand.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Installing and configuring Promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get a version that matches Loki&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">promtail_version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.8.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Download binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.unarchive&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/tmp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install binary&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">/tmp/promtail-linux-amd64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/local/bin/promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">remote_src&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0754&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.file&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/etc/promtail&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0755&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Ensure Promtail config in place&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">promtail-config.yml.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/promtail/config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail service user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.user&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">system&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">groups&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;adm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create Promtail service file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Unit]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Description=Promtail service for Grafana Loki
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> After=network.target
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Type=simple
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> User=promtail
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ExecStart=/usr/local/bin/promtail -config.file=/etc/promtail/config.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> Restart=always
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> [Install]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> WantedBy=multi-user.target&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/systemd/system/promtail.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">notify&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Start Promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">handlers&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload systemd daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">daemon_reload&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Reload promtail service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">promtail&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">state&lt;/span>: &lt;span style="color:#ae81ff">restarted&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Usb Wake</title><link>https://blog.sions.org/posts/usb-wake/</link><pubDate>Sun, 16 Jul 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/usb-wake/</guid><description>When done working on my desktop I suspend it, either through the Cinnamon panel or via systemctl suspend. But it had an issue. I would frequently come downstairs to find it on. The monitors with their familiar glow lighting up the room. My desktop running Linux Mint had a problem. Some initial diagnosis lead me to finding out that the issue was that the keyboard and mouse, paired with the lovely kitties were waking it from it&amp;rsquo;s slumber.</description><content>&lt;p>When done working on my desktop I suspend it, either through the Cinnamon panel or via &lt;code>systemctl suspend&lt;/code>. But it had an issue. I would frequently come downstairs to find it on. The monitors with their familiar glow lighting up the room. My desktop running Linux Mint had a problem. Some initial diagnosis lead me to finding out that the issue was that the keyboard and mouse, paired with the lovely kitties were waking it from it&amp;rsquo;s slumber.&lt;/p>
&lt;p>After a bit of web searching I found a forum post &lt;a href="https://forums.linuxmint.com/viewtopic.php?t=239133">https://forums.linuxmint.com/viewtopic.php?t=239133&lt;/a> that seems to have a similiar issue and a solution. I&amp;rsquo;ve rewritten a little bit here with examples, ending with an Ansible playbook to resolve the issue (at least on my machine). Updating it for your own equipment is an exercise left fot the user.&lt;/p>
&lt;p>We run &lt;code>cat/proc/acpi/wakeup | grep enabled&lt;/code> to get a list of devices that can wake the computer.&lt;/p>
&lt;p>Then cross-reference it with &lt;code>lspci | grep USB&lt;/code> to get the PCI bus for the USB devices.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sion@sion-dlnx:~$ lspci | grep USB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>00:14.0 USB controller: Intel Corporation Cannon Lake PCH USB 3.1 xHCI Host Controller &lt;span style="color:#f92672">(&lt;/span>rev 10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>01:00.2 USB controller: NVIDIA Corporation TU116 USB 3.1 Host Controller &lt;span style="color:#f92672">(&lt;/span>rev a1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>01:00.3 Serial bus controller: NVIDIA Corporation TU116 USB Type-C UCSI Controller &lt;span style="color:#f92672">(&lt;/span>rev a1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sion@sion-dlnx:~$ cat /proc/acpi/wakeup | grep enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PEG0 S4 *enabled pci:0000:00:01.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RP11 S4 *enabled pci:0000:00:1d.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GLAN S4 *enabled pci:0000:00:1f.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>XHC S4 *enabled pci:0000:00:14.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AWAC S4 *enabled platform:ACPI000E:00
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Looking at this, we just need to disable &lt;code>XHC&lt;/code> to get our intended result of preventing USB from waking the computer.&lt;/p>
&lt;p>The linked forum post calls out adding &lt;code>echo &amp;quot;EHC3&amp;quot; &amp;gt; /proc/acpi/wakeup&lt;/code> to &lt;code>/etc/rc.local&lt;/code> for executing and adding it on system startup (replacing EHC3 with the actual device name).&lt;/p>
&lt;p>rc.local is a file that&amp;rsquo;s used with sysVinit systems, it would be executed last when changing runlevels. As it&amp;rsquo;s more common to encounter systemd we need to use an alternative, creating a script and a matching systemd service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sion@sion-dlnx:~/Toybox$ sudo chmod +x /usr/local/bin/customstartup.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sion@sion-dlnx:~/Toybox$ sudo cp customstartup.service /etc/systemd/system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After briefling installing them to make sure everything works I deleted them. Since I&amp;rsquo;m also trying to use Ansible more I&amp;rsquo;ll go ahead and create a playbook which handles this. Yes It should technically be a role, but at this point I only have a couple things that need to happen so they&amp;rsquo;ll be playbooks and get converted to roles soon enough.&lt;/p>
&lt;p>disable_usb_wake.sh&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>set -o errexit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -o nounset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -o pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">################################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Disable USB devices from waking computer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/bin/systemd-cat -t &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>basename &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$0&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> disabling &lt;span style="color:#e6db74">&amp;#39;XHC&amp;#39;&lt;/span> device from waking computer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;XHC&amp;#34;&lt;/span> &amp;gt; /proc/acpi/wakeup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>disable_usb_wake.service&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">################################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># disable_usb_wake.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This service unit is to disable USB devices from waking computer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">################################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This should be placed in /etc/systemd/system.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">################################################################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Description&lt;span style="color:#f92672">=&lt;/span>Runs /usr/local/bin/disable_usb_wake.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/local/bin/disable_usb_wake.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Install&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WantedBy&lt;span style="color:#f92672">=&lt;/span>multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>disable_usb_wake.yml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install systemd service disabling USB waking computer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hosts&lt;/span>: &lt;span style="color:#ae81ff">all&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install disable_usb_wake.sh script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">files/disable_usb_wake.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/usr/local/bin/disable_usb_wake.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0544&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install disable_usb_wake service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.copy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">src&lt;/span>: &lt;span style="color:#ae81ff">files/disable_usb_wake.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">dest&lt;/span>: &lt;span style="color:#ae81ff">/etc/systemd/system/disable_usb_wake.service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mode&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;0644&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">owner&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Start disable_usb_wake service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">become&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ansible.builtin.systemd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">enabled&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">disable_usb_wake&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Image Change</title><link>https://blog.sions.org/posts/image-change/</link><pubDate>Sat, 15 Jul 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/image-change/</guid><description>While changing what source image a docker container in unRaid was using, the Docker managment service encountered an error. The error itself I forgot to write down. But what is normally a typical process of &amp;ldquo;download new image, stop old container. create new container, cleanup old image.&amp;rdquo; was interrupted and it left the container in a down state. This wasn&amp;rsquo;t good primarily because I am lazy and didn&amp;rsquo;t want to spend the mental power and try to come up with what the previous config options were so there can be no change except what image is being used.</description><content>&lt;p>While changing what source image a docker container in unRaid was using, the Docker managment service encountered an error. The error itself I forgot to write down. But what is normally a typical process of &amp;ldquo;download new image, stop old container. create new container, cleanup old image.&amp;rdquo; was interrupted and it left the container in a down state. This wasn&amp;rsquo;t good primarily because I am lazy and didn&amp;rsquo;t want to spend the mental power and try to come up with what the previous config options were so there can be no change except what image is being used.&lt;/p>
&lt;p>After fixing the underlying cause for what caused the error. (The ghcr package for this particular repo was marked as private only). I started trying to recover what was a downed service. A brief spat of web searches and I discover that when creating a custom docker image 2 things are true. The first that it&amp;rsquo;s stored as an xml template in &lt;code>/boot/config/plugins/dockerMan/templates-user&lt;/code>. The second that I didn&amp;rsquo;t have to open the XML file and try to transcode as I had thought. You can simply go to &lt;code>Docker&lt;/code> -&amp;gt; &lt;code>Add Container&lt;/code> -&amp;gt; &lt;code>Templates&lt;/code> and all of your custom docker invocations are contained there as templates. Easy Peasy.&lt;/p></content></item><item><title>Unraid Scripts</title><link>https://blog.sions.org/posts/unraid-scripts/</link><pubDate>Wed, 05 Jul 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/unraid-scripts/</guid><description>One of the services my unRaid box runs is a borgbackup server (which is secretly just an SSH server with a forced command). As a check to make sure the important repos are indeed getting backed up to I&amp;rsquo;ve got a script running daily via the User Scripts Plugin. It&amp;rsquo;s a pretty simple script, all it does is check when the files in certain target repos have last been written to.</description><content>&lt;p>One of the services my unRaid box runs is a borgbackup server (which is secretly just an SSH server with a forced command). As a check to make sure the important repos are indeed getting backed up to I&amp;rsquo;ve got a script running daily via the &lt;em>User Scripts&lt;/em> Plugin. It&amp;rsquo;s a pretty simple script, all it does is check when the files in certain target repos have last been written to. If it hasn&amp;rsquo;t been in the last 7 days we send a Discord message for awareness.&lt;/p>
&lt;p>Recently I was performing some maintenance and my script ran warning me that they all had not been written to within that cutoff. While I was investigating the logs it took me an embarrassingly long period of time to realize the unRaid array was simply not running. So, where the script was checking was missing. Time to add some safety to the script. Now the first section runs and the script will exit if the Array isn’t running.&lt;/p>
&lt;p>Borg Check Script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Check if array is started&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls /mnt/disk&lt;span style="color:#f92672">[&lt;/span>1-9&lt;span style="color:#f92672">]&lt;/span>* 1&amp;gt;/dev/null 2&amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ! ls /mnt/disk&lt;span style="color:#f92672">[&lt;/span>1-9&lt;span style="color:#f92672">]&lt;/span>*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;ERROR: Array must be started before using this script&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readonly WEBHOOK_URL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://discord.com/api/webhooks/0000/XXXX&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># List of directories to check&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readonly WATCH_DIRS&lt;span style="color:#f92672">=(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/mnt/dir1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/mnt/dir2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/mnt/dir3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Function to send a Discord webhook message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>send_discord_message&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local message&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>$1&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local payload&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{\&amp;#34;content\&amp;#34;: \&amp;#34;&lt;/span>$message&lt;span style="color:#e6db74">\&amp;#34;}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curl -H &lt;span style="color:#e6db74">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$payload&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$WEBHOOK_URL&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Iterate over the directories&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> dir in &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>WATCH_DIRS[@]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check if any files were modified in the last 7 days&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> find &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$dir&lt;span style="color:#e6db74">&amp;#34;&lt;/span> -type f -newermt &lt;span style="color:#e6db74">&amp;#34;-7 days&amp;#34;&lt;/span> 2&amp;gt;/dev/null | grep -q .; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Send Discord webhook message for directories without recent changes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MESSAGE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Directory &lt;/span>$dir&lt;span style="color:#e6db74"> has not been modified in the last 7 days&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_discord_message &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MESSAGE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$MESSAGE&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Full Hd</title><link>https://blog.sions.org/posts/full-hd/</link><pubDate>Mon, 20 Mar 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/full-hd/</guid><description>I woke up this morning to my RSS feed misbehaving. FreshRSS was popping up an error along the lines that it was unable to make an internet connection. This was a little odd as I was connected over the local network to the app. It was loading at all which meant it could connect. I won&amp;rsquo;t bore you with how I found the problem, but the root partition of the server was full.</description><content>&lt;p>I woke up this morning to my RSS feed misbehaving. FreshRSS was popping up an error along the lines that it was unable to make an internet connection. This was a little odd as I was connected over the local network to the app. It was loading at all which meant it could connect. I won&amp;rsquo;t bore you with how I found the problem, but the root partition of the server was full.&lt;/p>
&lt;p>A full root partition can cause a wide array of problems. As there shouldn&amp;rsquo;t be anything downloading to this partition it was well over what it should be. The root partition is located on a 112 GB SSD. so there&amp;rsquo;s not a whole lot but after cleaning up space I found that I was using less than a quarter of the drive.&lt;/p>
&lt;p>When the drive is full you need to prioritze geting any space. just so the system can start to breathe again.&lt;/p>
&lt;p>As this is a docker host &lt;code>docker system prune&lt;/code> is a great candidate. It only cleared off a few hundred megs but it did what it was supposed to in this instance. Now we can search down and track down what the issue is.&lt;/p>
&lt;p>&lt;code>sudo du -hsx /* | sort -rh | head -n 5&lt;/code>
Couple things going on so lets break down the arguments
&lt;code>du -hsx&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>h&lt;/code>: Human readable output. As a lowly human just reading bytes is hard.&lt;/li>
&lt;li>&lt;code>s&lt;/code>: summarize, just put the totals on everything that du is ran against.&lt;/li>
&lt;li>&lt;code>x&lt;/code>: one-file-system. Don&amp;rsquo;t leave the filesystem, as we are only looking at the root partiition we don&amp;rsquo;t need to know about everything that&amp;rsquo;s mounted within the &lt;code>/&lt;/code> filesystem.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>sort -rh&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>r&lt;/code>: Reverse. We want the big numbers first&lt;/li>
&lt;li>&lt;code>h&lt;/code>: human-numeric-sort. We&amp;rsquo;re using human numbers because we&amp;rsquo;re human.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>head -n 10&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>n&lt;/code>: Pretty simple, this is how many lines we want. By specifying a number we&amp;rsquo;re not just using the default.&lt;/li>
&lt;/ul>
&lt;p>And the output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo du -hsx /* | sort -rh | head -n &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>86G /var
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3.2G /home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2.0G /usr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>81M /boot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3.9M /etc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Well it&amp;rsquo;s &lt;code>/var&lt;/code> as a culprit. We can just run the same command but specifying the path so we can dig in and keep digging down to find where the issue is. I won&amp;rsquo;t post the outputs but I&amp;rsquo;ll give the commands:&lt;/p>
&lt;ol>
&lt;li>&lt;code>$ sudo du -hsx /var/* | sort -rh | head -n 5&lt;/code>&lt;/li>
&lt;li>&lt;code>$ sudo du -hsx /var/lib/* | sort -rh | head -n 5&lt;/code>&lt;/li>
&lt;li>&lt;code>$ sudo du -hsx /var/lib/docker/* | sort -rh | head -n 5&lt;/code>&lt;/li>
&lt;li>&lt;code>$ sudo du -hsx /var/lib/docker/containers/* | sort -rh | head -n 5&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>And the output for that last command points where the culprit is, mainly this nifty line:&lt;code>64G /var/lib/docker/containers/containers/c585fa6366ddbd90e8565e07797431deab5c86bd157f757317d3b0655c099562&lt;/code>&lt;/p>
&lt;p>Looking a bit further (I forgot to grab logs of my commands) we can see that the container log(s) is a single 63 gig file. Whelp. There&amp;rsquo;s the problem. A single docker container log is eating up 64 gigs of data, probaly bad configuration on my part. Using &lt;code>docker inspect&lt;/code> we can find out which container was badly configured. Ended up being my borgmatic container, which has been running daily for over a month. Great! A log file is an easy fix! We just need to implement log rotation.&lt;/p>
&lt;p>Couple different ways we can do it.&lt;/p>
&lt;ul>
&lt;li>logrotate daemon&lt;/li>
&lt;li>docker daemon log-driver settings&lt;/li>
&lt;/ul>
&lt;p>The docker daemon is probably a little easier to configure, but I&amp;rsquo;m also just more comfortable with it. Setting defaults on the docker stuff is primarily done via the config file which on a linux system is at &lt;code>/etc/docker/daemon.json&lt;/code>. This file may need to be created, and we&amp;rsquo;ll do so putting the below into the file. Updating this file and restarting the service via &lt;code>sudo systemctl restart docker.service&lt;/code> will cause any new container to use these new logging driver settings. As this isn&amp;rsquo;t a new container we&amp;rsquo;ll just use &lt;code>docker-compose down&lt;/code> followed by &lt;code>docker-compose up -d&lt;/code> on the compose file with the culprit container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-driver&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;local&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;log-opts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;max-size&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;15m&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;max-file&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After updating these settings we can see that was the issue &lt;code>df -h&lt;/code> is now reporting that the root partition is at 27G which is much much better. Should figure out how to send logs to splunk. Though I&amp;rsquo;m not sure I like using splunk. We should also set up monitoring to get a notification when we get close to filling the drive again.&lt;/p></content></item><item><title>I got my Network+ last week</title><link>https://blog.sions.org/posts/boring-week/</link><pubDate>Mon, 13 Mar 2023 08:00:00 +0000</pubDate><guid>https://blog.sions.org/posts/boring-week/</guid><description>Didn&amp;rsquo;t post last week when I got it, guess I was feeling a little burnt out.
But hey, first certification. Can&amp;rsquo;t necessarily use it at this point yet but I&amp;rsquo;ve got it and during the course of studying for it I definitely found that a number of things make more sense. Even just browsing the Homelab subreddit last night I could tell I had a better understanding than I did a couple months ago.</description><content>&lt;p>Didn&amp;rsquo;t post last week when I got it, guess I was feeling a little burnt out.&lt;/p>
&lt;p>But hey, first certification. Can&amp;rsquo;t necessarily use it at this point yet but I&amp;rsquo;ve got it and during the course of studying for it I definitely found that a number of things make more sense. Even just browsing the Homelab subreddit last night I could tell I had a better understanding than I did a couple months ago.&lt;/p></content></item><item><title>Publishing Obsidian Documentation</title><link>https://blog.sions.org/posts/docs-publishing/</link><pubDate>Mon, 27 Feb 2023 05:33:12 +0000</pubDate><guid>https://blog.sions.org/posts/docs-publishing/</guid><description>I keep my notes in markdown files in a git repo my primary editor is a tool called obsidian.md. I&amp;rsquo;ve got minor gripes and for the most part I&amp;rsquo;ve got it syncing well and working well. However, a nice to have feature would be to share individual documents with the public. Couple examples, keeping a digital recipe box for the household to read from or sharing TTRPG notes after a session.</description><content>&lt;p>I keep my notes in markdown files in a git repo my primary editor is a tool called &lt;a href="https://obsidian.md/">obsidian.md&lt;/a>. I&amp;rsquo;ve got minor gripes and for the most part I&amp;rsquo;ve got it syncing well and working well. However, a nice to have feature would be to share individual documents with the public. Couple examples, keeping a digital recipe box for the household to read from or sharing TTRPG notes after a session.&lt;/p>
&lt;p>For right now I want to set it up such that I can share things with the household. Log into the designated subdomain, and so long as you&amp;rsquo;re on my network using my DNS server it should load happily.&lt;/p>
&lt;p>Here&amp;rsquo;s the process I&amp;rsquo;ve taken and settled on for now.&lt;/p>
&lt;p>Workflow:&lt;/p>
&lt;ol>
&lt;li>sync git repo&lt;/li>
&lt;li>process markdown into HTML&lt;/li>
&lt;li>serve HTML with a web server&lt;/li>
&lt;/ol>
&lt;p>Tools:&lt;/p>
&lt;ol>
&lt;li>Githubs cli tool &lt;a href="https://github.com/cli/cli">github.com/cli/cli&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/devidw/obsidian-to-hugo">obsidian-to-hugo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gohugo.io/">hugp&lt;/a>&lt;/li>
&lt;li>nginx running on docker&lt;/li>
&lt;/ol>
&lt;h3 id="workflow-step-1">Workflow Step 1:&lt;/h3>
&lt;p>Something I&amp;rsquo;ve been trying to deal with and come up with a solution I like is giving my server read-only access to multiple private repos. As of the time of this writing I keep most of my git repositories located at github. Github doesn&amp;rsquo;t allow you to specify an ssh key as a deploy key to multiple projects. And the deploy keys work great if you only need to grant access to 1 repo. But this runs into problems when you&amp;rsquo;re trying to grant access to several, purely from a management standpoint. how you do you cleanly associate an ssh key with individual repos then refer to them. I saw some hacks online but I hadn&amp;rsquo;t liked any of them.&lt;/p>
&lt;p>Doing a bit of experimenting on this when I was trying to deploy this I remembered the Github CLI tool. After some trial and error I found that you can not use a personal access token however neither fine-grained tokens or classic tokens seem to have access to just perform read-only actions on the content of repos. I ended up using http authentication, logging in as myself. While writing this I&amp;rsquo;m trying to think if it&amp;rsquo;s got read-only access or full read-write. I&amp;rsquo;ll have to investigate it later.&lt;/p>
&lt;h3 id="workflow-step-2">Workflow Step 2:&lt;/h3>
&lt;p>Processing markdown files into HTML is a joint problem. There&amp;rsquo;s a number of static site generators that will take in markdown and output HTML. The tool i&amp;rsquo;m most familiar with is hugo, which is what this blog is using. Doing a bit of research I found a python module that converts obsidian markdown files into hugo markdown files.&lt;/p>
&lt;p>looking at the readme it also provides functionality on scanning the contents of the file for specific conditions as to whether it should graduate into a published document. I&amp;rsquo;ve got a small python script written below which I run before I have hugo process the documents into HTML.&lt;/p>
&lt;p>process.py:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> obsidian_to_hugo &lt;span style="color:#f92672">import&lt;/span> ObsidianToHugo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">filter_file&lt;/span>(file_contents: str, file_path: str) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> bool:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#34;publish: true&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">---&amp;#34;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> file_contents:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#34;template_&amp;#34;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> file_path:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>obsidian_to_hugo &lt;span style="color:#f92672">=&lt;/span> ObsidianToHugo(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> obsidian_vault_dir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/local/kb-obsidian&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hugo_content_dir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/local/hugo-site/content&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> filters&lt;span style="color:#f92672">=&lt;/span>[filter_file],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>obsidian_to_hugo&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is a pretty strightforward snippet on the python projects readme I&amp;rsquo;ve adjusted a bit for my needs.&lt;/p>
&lt;p>After generating the content with that processing script we now need to trigger hugo to run and convert the content markdown files into HTML. Creating and configuring the initial hugo site only needs to be done the first time, but after that you can just change to the hugo site directory, then execute a simple &lt;code>hugo&lt;/code>. Depending on which theme you&amp;rsquo;re using it could require the extended version of hugo. Below I&amp;rsquo;ve included my config file.&lt;/p>
&lt;p>When taking notes I will add page links to pages that don&amp;rsquo;t exist. This can cause hugo to throw a fit and refuse to process then the files.
&lt;code>REF_NOT_FOUND: Ref &amp;quot;Azure&amp;quot;: &amp;lt;snip&amp;gt;: page not found&lt;/code>&lt;/p>
&lt;p>Adding &lt;code>refLinksErrorLevel = &amp;quot;WARNING&amp;quot;&lt;/code> to the config file results in warnings still being emitted but will tell hugo that it&amp;rsquo;s alright.&lt;/p>
&lt;p>hugo config.toml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">baseURL&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;en-us&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;My New Hugo Site&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">theme&lt;/span> = &lt;span style="color:#e6db74">&amp;#39;ananke&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">refLinksErrorLevel&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;WARNING&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="workflow-step-3">Workflow Step 3:&lt;/h3>
&lt;p>This is for the most part the simplest step, couple bullet points:&lt;/p>
&lt;ul>
&lt;li>Create a custom nginx config&lt;/li>
&lt;li>Point nginx at the hugo sites public directory&lt;/li>
&lt;li>Launch nginx container&lt;/li>
&lt;/ul>
&lt;p>I like to set the volume mounting and launch the container to create the directory structure. Replacing &lt;code>nginx/nginx/site-confs/default.conf&lt;/code> with our custom config.&lt;/p>
&lt;p>nginx config file&lt;/p>
&lt;pre tabindex="0">&lt;code>server {
listen 80 default_server;
listen [::]:80 default_server;
server_name _;
set $root /app/www/public;
if (!-d /app/www/public) {
set $root /config/www;
}
root $root;
index index.HTML;
location / {
try_files $uri $uri/ /index.HTML /index.php$is_args$args =404;
add_header &amp;#39;Access-Control-Allow-Origin&amp;#39; &amp;#39;*&amp;#39;; # Allow access to resources (for www and non www)
}
}
&lt;/code>&lt;/pre>&lt;p>docker-compose.yml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nginx-docs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">lscr.io/linuxserver/nginx:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env_file&lt;/span>: &lt;span style="color:#ae81ff">.env&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./nginx:/config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">./hugo-site/public:/config/www&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">3003&lt;/span>:&lt;span style="color:#ae81ff">80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">unless-stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">mgmt_network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.enable=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs-http.entrypoints=web&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs-http.rule=Host(`docs.${DOMAIN}`)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs-http.middlewares=docs-https&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.middlewares.docs-https.redirectscheme.scheme=https&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs.entrypoints=websecure&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs.rule=Host(`docs.${DOMAIN}`)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs.tls=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.docs.tls.certresolver=myresolver&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.services.docs.loadbalancer.server.port=80&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mgmt_network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">external&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now when someone on the wifi goes the the subdomain docs on my internal domain name they get served the default hugo index page. There&amp;rsquo;s no sitemap, but if things link to each other correctly it&amp;rsquo;s plenty user friendly. While it&amp;rsquo;s not pretty it&amp;rsquo;s a minimum viable product and I plan to further iterate on it.&lt;/p></content></item><item><title>Splunk Setup</title><link>https://blog.sions.org/posts/splunk-setup/</link><pubDate>Mon, 20 Feb 2023 03:24:33 +0000</pubDate><guid>https://blog.sions.org/posts/splunk-setup/</guid><description>I set up a splunk docker container recently and there were a couple what feel like oddities catching me up.
Default debian doesn&amp;rsquo;t have world readable log files. This is not for production. But it&amp;rsquo;s okay for my homelab. Starting with this basic docker-compose file we made sure it worked.
version: &amp;#34;3.6&amp;#34; services: so1: image: ${SPLUNK_IMAGE:-splunk/splunk:latest} container_name: so1 environment: - SPLUNK_START_ARGS=--accept-license - SPLUNK_PASSWORD ports: - 8000:8000 It&amp;rsquo;s simple, gets everything running without doing anything fancy.</description><content>&lt;p>I set up a splunk docker container recently and there were a couple what feel like oddities catching me up.&lt;/p>
&lt;ol>
&lt;li>Default debian doesn&amp;rsquo;t have world readable log files.&lt;/li>
&lt;li>This is not for production. But it&amp;rsquo;s okay for my homelab.&lt;/li>
&lt;/ol>
&lt;p>Starting with this basic docker-compose file we made sure it worked.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3.6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">so1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">${SPLUNK_IMAGE:-splunk/splunk:latest}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">so1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">SPLUNK_START_ARGS=--accept-license&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">SPLUNK_PASSWORD&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">8000&lt;/span>:&lt;span style="color:#ae81ff">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s simple, gets everything running without doing anything fancy. Let&amp;rsquo;s iterate it fancier and match the style of the rest of my compose files.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;3.6&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">splunk&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">splunk/splunk:latest&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#ae81ff">splunk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env_file&lt;/span>: &lt;span style="color:#ae81ff">.env&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">SPLUNK_START_ARGS=--accept-license&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">splunk_config:/opt/splunk/etc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">splunk_data:/opt/splunk/var&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/var/log:/host/var/log:ro&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">8000&lt;/span>:&lt;span style="color:#ae81ff">8000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">unless-stopped&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">mgmt_network&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.enable=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk-http.entrypoints=web&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk-http.rule=Host(`splunk.${DOMAIN}`)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk-http.middlewares=splunk-https&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.middlewares.splunk-https.redirectscheme.scheme=https&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk.entrypoints=websecure&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk.rule=Host(`splunk.${DOMAIN}`)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.splunk.tls=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.routers.secwhoami.tls.certresolver=myresolver&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;traefik.http.services.splunk.loadbalancer.server.port=8000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">splunk_config&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">splunk_data&lt;/span>: {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mgmt_network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">external&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is what we end up with after a couple iterations. But largely it matches the style and layout of the rest of my compose files. Three large changes:&lt;/p>
&lt;ol>
&lt;li>I&amp;rsquo;ve moved the splunk password out of the compose file to a .env file (which gets encrypted for storing in git)&lt;/li>
&lt;li>Added data persistence&lt;/li>
&lt;li>Added Traefik labels, and network traefik watches&lt;/li>
&lt;/ol>
&lt;p>There was a slight problem once this was done, all of the files in &lt;code>/var/log&lt;/code> aren&amp;rsquo;t world readable. After a bit of searching we come across the splunk community forums detailing a similar issue &lt;a href="https://community.splunk.com/t5/Security/How-to-monitor-root-owned-logs-while-running-Splunk-as-a-non/td-p/16594">community.splunk.com&lt;/a> while this isn&amp;rsquo;t a docker solution it&amp;rsquo;s a solution to the problem. If not the most docker centric approach it beats setting up a universal forwarder to get files to the same machine.&lt;/p>
&lt;p>Boiling it down we need to install acl controls, create a splunk user on the host, set up a logrotate rule file.&lt;/p>
&lt;h2 id="accomplishing-1-and-2">Accomplishing 1 and 2:&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install acl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo groupadd -g &lt;span style="color:#ae81ff">41812&lt;/span> splunk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo adduser --uid &lt;span style="color:#ae81ff">41812&lt;/span> splunk --shell /sbin/nologin --system --no-create-home --gid &lt;span style="color:#ae81ff">41812&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice we created a group then created the user. The version of debian I was running with the version of adduser I had wasn&amp;rsquo;t permitting to explicity specify that I needed a primary group matching the user. Making the user on its own was causing the user to get put in a group &amp;ldquo;nogroup&amp;rdquo;. Probably user error.&lt;/p>
&lt;h2 id="accomplishing-number-3">Accomplishing number 3:&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cat /etc/logrotate.d/Splunk_ACLs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/var/log/splunklog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postrotate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/bin/setfacl -m g:splunk:r /var/log/auth.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/bin/setfacl -m g:splunk:r /var/log/messages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/bin/setfacl -m g:splunk:r /var/log/syslog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endscript
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Understanding this fully needs a bit of background.&lt;/p>
&lt;h3 id="logrotate">logrotate&lt;/h3>
&lt;p>As a broad stroke logrotate has a simple task. Keep files manageable.&lt;/p>
&lt;p>logrotate performs this function through keeping track of the size of the file, or at regular intervals renames the file adding a &lt;code>.#&lt;/code> onto the end of the filename. The tool is capable of much more but we don&amp;rsquo;t want to delve too far into that.&lt;/p>
&lt;p>The directory &lt;code>/etc/logrotate.d/&lt;/code> is charged with holding different configurations for various packages. In this case we&amp;rsquo;ve both created a dummy file &lt;code>/var/log/splunklog&lt;/code> and listed various rules on how logrotate should interact with that file. By default this file will be run daily as the root user.&lt;/p>
&lt;h3 id="file-acls">File ACLs&lt;/h3>
&lt;p>The keywords &lt;code>postrotate&lt;/code> and &lt;code>endscript&lt;/code> desginate a block of actions that should be perfomed when the file &lt;code>Splunk_ACLs&lt;/code> is executed daily. This helps ensure that the specified actions are maintained on the specific files listed.&lt;/p>
&lt;p>Lets break down the line(s) &lt;code>/usr/bin/setfacl -m g:splunk:r /var/log/auth.log&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>/usr/bin/setfacl&lt;/code> is a command with the sole purpose of setting linux file ACL rules.&lt;/li>
&lt;li>&lt;code>-m&lt;/code> modify the rules on the designated file&lt;/li>
&lt;li>&lt;code>g:splunk:r&lt;/code> pretty simple. This is where we specify new rules that should be active on the file. &lt;code>:&lt;/code> is a delimiter splitting this into a three part spec.&lt;/li>
&lt;/ul>
&lt;p>that spec reads as follows:&lt;/p>
&lt;ul>
&lt;li>&lt;code>g&lt;/code> says that the following piece will be either a gid or a group name.&lt;/li>
&lt;li>&lt;code>splunk&lt;/code> the name of the group, we&amp;rsquo;re opting for readability by using a group name.&lt;/li>
&lt;li>&lt;code>r&lt;/code> the octal or relative form, if using relative any of &lt;code>rwx&lt;/code> can be used, we&amp;rsquo;ll be opting for read-only for logs in this case.&lt;/li>
&lt;/ul></content></item><item><title>An Entry</title><link>https://blog.sions.org/posts/an-entry/</link><pubDate>Sat, 07 Jan 2023 05:33:12 +0000</pubDate><guid>https://blog.sions.org/posts/an-entry/</guid><description>My first post. Well my first actual post was supposed to be a log/ tutorial/ step by step/ whatever of setting up Jekyll and Backblaze and cloudflare. Well that was several days ago. Now I&amp;rsquo;m typing this, a quick draft within Google Keep. Turn it into Markdown tomorrow. Post it day after. But largely I&amp;rsquo;ve been dragging my feet, what&amp;rsquo;s the goal of this blog? Is there one? Does there need to be one?</description><content>&lt;p>My first post. Well my first &lt;em>actual&lt;/em> post was supposed to be a log/ tutorial/ step by step/ whatever of setting up Jekyll and Backblaze and cloudflare. Well that was several days ago. Now I&amp;rsquo;m typing this, a quick draft within Google Keep. Turn it into Markdown tomorrow. Post it day after. But largely I&amp;rsquo;ve been dragging my feet, what&amp;rsquo;s the goal of this blog? Is there one? Does there need to be one?&lt;/p></content></item><item><title>Hello World</title><link>https://blog.sions.org/posts/hello-world/</link><pubDate>Sun, 01 Jan 2023 17:56:42 +0000</pubDate><guid>https://blog.sions.org/posts/hello-world/</guid><description>hello world!</description><content>&lt;p>hello world!&lt;/p></content></item></channel></rss>